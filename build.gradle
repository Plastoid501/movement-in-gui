plugins {
	id 'maven-publish'
	id 'com.github.hierynomus.license' version '0.16.1' apply false
	id 'fabric-loom' version '1.10-SNAPSHOT' apply false

	// https://github.com/ReplayMod/preprocessor
	// https://github.com/Fallen-Breath/preprocessor
	id 'com.replaymod.preprocess' version '9d21b334a7'

	// https://github.com/Fallen-Breath/yamlang
	id 'me.fallenbreath.yamlang' version '1.4.1' apply false
}

preprocess {
	strictExtraMappings = false

	def mc1144  = createNode('1.14.4', 1_14_04, '')
	def mc1151  = createNode('1.15.1', 1_15_01, '')
	def mc1152  = createNode('1.15.2', 1_15_02, '')
	def mc1161  = createNode('1.16.1', 1_16_01, '')
	def mc1163  = createNode('1.16.3', 1_16_03, '')
	def mc1165  = createNode('1.16.5', 1_16_05, '')
	def mc1171  = createNode('1.17.1', 1_17_01, '')
	def mc1182  = createNode('1.18.2', 1_18_02, '')
	def mc1192  = createNode('1.19.2', 1_19_02, '')
	def mc1193  = createNode('1.19.3', 1_19_03, '')
	def mc1194  = createNode('1.19.4', 1_19_04, '')
	def mc1201 = createNode('1.20.1', 1_20_01, '')
	def mc1202 = createNode('1.20.2', 1_20_02, '')
	def mc1204 = createNode('1.20.4', 1_20_04, '')
	def mc1206 = createNode('1.20.6', 1_20_06, '')
	def mc1213 = createNode('1.21.3', 1_21_03, '')
	def mc1214 = createNode('1.21.4', 1_21_04, '')
	def mc1215 = createNode('1.21.5', 1_21_05, '')

	mc1144.link(mc1151, null)
	mc1151.link(mc1152, null)
	mc1152.link(mc1161, null)
	mc1161.link(mc1163, null)
	mc1163.link(mc1165, null)
	mc1165.link(mc1171, null)
	mc1171.link(mc1182, null)
	mc1182.link(mc1192, null)
	mc1192.link(mc1193, null)
	mc1193.link(mc1194, null)
	mc1194.link(mc1201, null)
	mc1201.link(mc1202, null)
	mc1202.link(mc1204, null)
	mc1204.link(mc1206, null)
	mc1206.link(mc1213, null)
	mc1213.link(mc1214, null)
	mc1214.link(mc1215, null)
}

tasks.register('buildAndGather') {
	subprojects {
		dependsOn project.tasks.named('build').get()
	}
	doFirst {
		println 'Gathering builds'
		def buildLibs = {
			p -> p.buildDir.toPath().resolve('libs')
		}
		delete fileTree(buildLibs(rootProject)) {
			include '*'
		}
		subprojects {
			copy {
				from(buildLibs(project)) {
					include '*.jar'
					exclude '*-dev.jar', '*-sources.jar', '*-shadow.jar'
				}
				into buildLibs(rootProject)
				duplicatesStrategy DuplicatesStrategy.INCLUDE
			}
		}
	}
}
